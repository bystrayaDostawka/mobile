import 'package:dio/dio.dart';

import '../../features/auth/data/models/auth_login_response_model.dart'
    as auth_models;
import '../../features/profile/data/model/profile_response_model.dart'
    as profile_models;
import '../../features/profile/data/model/update_profile_request_model.dart';
import '../../features/orders/data/models/orders_response_model.dart'
    as orders_models;
import '../../features/orders/data/models/order_details_response_model.dart'
    as order_details_models;
import '../../features/orders/data/models/order_status_model.dart'
    as order_status_models;
import '../../features/orders/data/models/photo_model.dart' as photo_models;
import '../../features/orders/data/models/order_comment_model.dart' as comment_models;

/// –ü—Ä–æ—Å—Ç–æ–π API –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º
class ApiClient {
  ApiClient(this._dio);

  final Dio _dio;

  /// –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<auth_models.AuthLoginResponseModel> login(LoginRequest request) async {
    final response = await _dio.post<Map<String, dynamic>>(
      '/api/mobile/login',
      data: request.toJson(),
    );
    return auth_models.AuthLoginResponseModel.fromJson(response.data!);
  }

  /// –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
  Future<Map<String, dynamic>> logout() async {
    final response = await _dio.post<Map<String, dynamic>>(
      '/api/mobile/logout',
    );
    return response.data ?? {};
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<profile_models.ProfileResponseModel> getUserProfile() async {
    try {
      final response = await _dio.get<Map<String, dynamic>>(
        '/api/mobile/profile',
      );

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞–ª–∏–¥–Ω—ã–µ JSON –¥–∞–Ω–Ω—ã–µ
      if (response.data == null) {
        throw Exception('–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç');
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ response.data —è–≤–ª—è–µ—Ç—Å—è Map, –∞ –Ω–µ —Å—Ç—Ä–æ–∫–æ–π
      if (response.data is! Map<String, dynamic>) {
        // –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ (HTML), –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if (response.data is String) {
          throw Exception(
            '–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª HTML –≤–º–µ—Å—Ç–æ JSON. –í–æ–∑–º–æ–∂–Ω–æ, —Ç–æ–∫–µ–Ω –∏—Å—Ç–µ–∫.',
          );
        }
        throw Exception('–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON –æ—Ç–≤–µ—Ç');
      }

      return profile_models.ProfileResponseModel.fromJson(response.data!);
    } catch (e) {
      rethrow;
    }
  }

  /// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  Future<profile_models.ProfileResponseModel> updateUserProfile(
    UpdateProfileRequestModel request,
  ) async {
    final response = await _dio.patch<Map<String, dynamic>>(
      '/api/mobile/profile',
      data: request.toJson(),
    );
    return profile_models.ProfileResponseModel.fromJson(response.data!);
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫
  Future<List<orders_models.OrderModel>> getOrders(
    Map<String, dynamic> queryParams,
  ) async {
    final response = await _dio.get<List<dynamic>>(
      '/api/mobile/orders',
      queryParameters: queryParams,
    );
    return (response.data ?? [])
        .map((order) => orders_models.OrderModel.fromJson(order))
        .toList();
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞ –ø–æ ID
  Future<order_details_models.OrderDetailsResponseModel> getOrderById(
    int id,
  ) async {
    print('üìã –ó–∞–ø—Ä–æ—Å: GET /api/mobile/orders/$id');
    final response = await _dio.get<Map<String, dynamic>>(
      '/api/mobile/orders/$id',
    );
    print('üìã –û—Ç–≤–µ—Ç: ${response.data}');
    return order_details_models.OrderDetailsResponseModel.fromJson(
      response.data!,
    );
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤
  Future<List<order_status_models.OrderStatusModel>> getOrderStatuses() async {
    final response = await _dio.get<List<dynamic>>(
      '/api/mobile/order-statuses',
    );
    return (response.data ?? [])
        .map((status) => order_status_models.OrderStatusModel.fromJson(status))
        .toList();
  }

  /// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
  Future<Map<String, dynamic>> updateOrderStatus(
    int orderId,
    UpdateOrderStatusRequest request,
  ) async {
    print('üìã –ó–∞–ø—Ä–æ—Å: PATCH /api/mobile/orders/$orderId/status');
    print('üìã –î–∞–Ω–Ω—ã–µ: ${request.toJson()}');
    print('üìã –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞: orderId=$orderId, request=$request');

    final response = await _dio.patch<Map<String, dynamic>>(
      '/api/mobile/orders/$orderId/status',
      data: request.toJson(),
      options: Options(headers: {'Accept': 'application/json'}),
    );

    print('üìã –û—Ç–≤–µ—Ç: ${response.data}');
    return response.data ?? {};
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∑–∞–∫–∞–∑–∞
  Future<List<photo_models.PhotoModel>> getOrderPhotos(int orderId) async {
    print('üì° –ó–∞–ø—Ä–æ—Å: GET /api/mobile/orders/$orderId/photos');
    final response = await _dio.get<List<dynamic>>(
      '/api/mobile/orders/$orderId/photos',
    );
    print('üì° –û—Ç–≤–µ—Ç: ${response.data}');
    return (response.data ?? [])
        .map((photo) => photo_models.PhotoModel.fromJson(photo))
        .toList();
  }


  /// –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∑–∞–∫–∞–∑–∞
  Future<List<photo_models.PhotoModel>> uploadOrderPhotos(
    int orderId,
    List<String> photoPaths,
  ) async {
    print(
      'üì§ –ó–∞–ø—Ä–æ—Å: POST /api/mobile/orders/$orderId/photos (${photoPaths.length} —Ñ–æ—Ç–æ)',
    );

    final List<MultipartFile> multipartFiles = [];

    for (int i = 0; i < photoPaths.length; i++) {
      final photoPath = photoPaths[i];

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º MIME —Ç–∏–ø —Ñ–∞–π–ª–∞
      String mimeType = 'image/jpeg'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é JPEG
      if (photoPath.toLowerCase().endsWith('.png')) {
        mimeType = 'image/png';
      } else if (photoPath.toLowerCase().endsWith('.jpg') ||
          photoPath.toLowerCase().endsWith('.jpeg')) {
        mimeType = 'image/jpeg';
      }

      // –°–æ–∑–¥–∞–µ–º MultipartFile —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º MIME —Ç–∏–ø–æ–º
      final multipartFile = await MultipartFile.fromFile(
        photoPath,
        filename: 'photo_${DateTime.now().millisecondsSinceEpoch}_$i.jpg',
        contentType: DioMediaType.parse(mimeType),
      );

      multipartFiles.add(multipartFile);
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º FormData –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è Laravel
    final formData = FormData();
    for (int i = 0; i < multipartFiles.length; i++) {
      formData.files.add(MapEntry('photos[]', multipartFiles[i]));
    }

    print('üì§ FormData fields: ${formData.fields}');
    print('üì§ FormData files: ${formData.files.map((e) => '${e.key}: ${e.value.filename}').toList()}');

    final response = await _dio.post<Map<String, dynamic>>(
      '/api/mobile/orders/$orderId/photos',
      data: formData,
      options: Options(
        contentType: 'multipart/form-data',
        headers: {'Accept': 'application/json'},
      ),
    );

    print('üì§ –û—Ç–≤–µ—Ç: ${response.data}');

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç - –º–æ–∂–µ—Ç –±—ã—Ç—å –º–∞—Å—Å–∏–≤ –∏–ª–∏ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç
    final responseData = response.data;
    if (responseData == null) {
      return [];
    }

    // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –º–∞—Å—Å–∏–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    if (responseData.containsKey('photos') && responseData['photos'] is List) {
      final photosList = responseData['photos'] as List<dynamic>;
      return photosList
          .map(
            (photo) =>
                photo_models.PhotoModel.fromJson(photo as Map<String, dynamic>),
          )
          .toList();
    }
    // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç - –º–∞—Å—Å–∏–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    else if (responseData is List) {
      return (responseData as List<dynamic>)
          .map(
            (photo) =>
                photo_models.PhotoModel.fromJson(photo as Map<String, dynamic>),
          )
          .toList();
    }
    // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
    else {
      return [photo_models.PhotoModel.fromJson(responseData)];
    }
  }

  /// –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–∫–∞–∑–∞
  Future<Map<String, dynamic>> deleteOrderPhoto(
    int orderId,
    int photoId,
  ) async {
    print('üóëÔ∏è –ó–∞–ø—Ä–æ—Å: DELETE /api/mobile/orders/$orderId/photos/$photoId');

    final response = await _dio.delete<Map<String, dynamic>>(
      '/api/mobile/orders/$orderId/photos/$photoId',
      options: Options(headers: {'Accept': 'application/json'}),
    );

    print('üóëÔ∏è –û—Ç–≤–µ—Ç: ${response.data}');
    return response.data ?? {};
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  Future<List<dynamic>> getNotifications() async {
    final response = await _dio.get<List<dynamic>>('/api/notifications');
    return response.data ?? [];
  }

  /// –û—Ç–º–µ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ
  Future<void> markNotificationAsRead(String notificationId) async {
    await _dio.put('/api/notifications/$notificationId/read');
  }

  /// –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ –∫—É—Ä—å–µ—Ä–∞
  Future<Map<String, dynamic>> createCourierNote(
    int orderId,
    String courierNote,
  ) async {
    print('üìù –ó–∞–ø—Ä–æ—Å: POST /api/mobile/orders/$orderId/courier-note');
    print('üìù –î–∞–Ω–Ω—ã–µ: {"courier_note": "$courierNote"}');

    final response = await _dio.post<Map<String, dynamic>>(
      '/api/mobile/orders/$orderId/courier-note',
      data: {'courier_note': courierNote},
      options: Options(headers: {'Accept': 'application/json'}),
    );

    print('üìù –û—Ç–≤–µ—Ç: ${response.data}');
    return response.data ?? {};
  }

  /// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ –∫—É—Ä—å–µ—Ä–∞
  Future<Map<String, dynamic>> updateCourierNote(
    int orderId,
    String courierNote,
  ) async {
    print('üìù –ó–∞–ø—Ä–æ—Å: PATCH /api/mobile/orders/$orderId/courier-note');
    print('üìù –î–∞–Ω–Ω—ã–µ: {"courier_note": "$courierNote"}');

    final response = await _dio.patch<Map<String, dynamic>>(
      '/api/mobile/orders/$orderId/courier-note',
      data: {'courier_note': courierNote},
      options: Options(headers: {'Accept': 'application/json'}),
    );

    print('üìù –û—Ç–≤–µ—Ç: ${response.data}');
    return response.data ?? {};
  }

  Future<Map<String, dynamic>> deleteCourierNote(int orderId) async {
    print('üóëÔ∏è –ó–∞–ø—Ä–æ—Å: DELETE /api/mobile/orders/$orderId/courier-note');

    final response = await _dio.delete<Map<String, dynamic>>(
      '/api/mobile/orders/$orderId/courier-note',
      options: Options(headers: {'Accept': 'application/json'}),
    );

    print('üóëÔ∏è –û—Ç–≤–µ—Ç: ${response.data}');
    return response.data ?? {};
  }
}

class LoginRequest {
  const LoginRequest({required this.email, required this.password});

  final String email;
  final String password;

  Map<String, dynamic> toJson() {
    return {'email': email, 'password': password};
  }
}

/// –ó–∞–ø—Ä–æ—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
class UpdateOrderStatusRequest {
  const UpdateOrderStatusRequest({
    required this.orderStatusId,
    this.note,
    this.deliveryDate,
  });

  final int orderStatusId;
  final String? note;
  final DateTime? deliveryDate;

  Map<String, dynamic> toJson() {
    final json = {
      'order_status_id': orderStatusId,
      if (note != null) 'declined_reason': note,
    };
    
    if (deliveryDate != null) {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO 8601
      json['delivery_at'] = deliveryDate!.toIso8601String();
    }
    
    print('üì§ UpdateOrderStatusRequest: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ: $json');
    return json;
  }
}

/// –ó–∞–ø—Ä–æ—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
class UploadPhotoRequest {
  const UploadPhotoRequest({required this.photo});

  final String photo; // Base64 encoded image

  Map<String, dynamic> toJson() {
    return {'photo': photo};
  }
}

// –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ –∑–∞–∫–∞–∑–æ–≤
extension OrderCommentsApi on ApiClient {
  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫—É—Ä—å–µ—Ä–∞
  Future<List<comment_models.OrderCommentModel>> getCourierComments() async {
    print('üåê ApiClient: –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫—É—Ä—å–µ—Ä–∞');
    
    final response = await _dio.get<Map<String, dynamic>>(
      '/api/courier/comments',
    );
    
    final commentsData = response.data!['comments'] as List;
    final comments = commentsData
        .map((json) => comment_models.OrderCommentModel.fromJson(json as Map<String, dynamic>))
        .toList();
    
    print('üåê ApiClient: –ü–æ–ª—É—á–µ–Ω–æ ${comments.length} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫—É—Ä—å–µ—Ä–∞');
    return comments;
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∑–∞–∫–∞–∑–∞
  Future<List<comment_models.OrderCommentModel>> getOrderComments(int orderId) async {
    print('üåê ApiClient: –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞ $orderId');
    
    final response = await _dio.get<Map<String, dynamic>>(
      '/api/orders/$orderId/comments',
    );
    
    final commentsData = response.data!['comments'] as List;
    final comments = commentsData
        .map((json) => comment_models.OrderCommentModel.fromJson(json as Map<String, dynamic>))
        .toList();
    
    print('üåê ApiClient: –ü–æ–ª—É—á–µ–Ω–æ ${comments.length} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤');
    return comments;
  }

  /// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  Future<comment_models.OrderCommentModel> createOrderComment(
    int orderId,
    String comment,
  ) async {
    print('üåê ApiClient: –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –∑–∞–∫–∞–∑–∞ $orderId');
    
    final response = await _dio.post<Map<String, dynamic>>(
      '/api/orders/$orderId/comments',
      data: {'comment': comment},
    );
    
    final commentModel = comment_models.OrderCommentModel.fromJson(
      response.data!['comment'] as Map<String, dynamic>,
    );
    
    print('üåê ApiClient: –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–æ–∑–¥–∞–Ω —Å ID ${commentModel.id}');
    return commentModel;
  }

  /// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  Future<comment_models.OrderCommentModel> updateOrderComment(
    int orderId,
    int commentId,
    bool isCompleted,
  ) async {
    print('üåê ApiClient: –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è $commentId');
    
    final response = await _dio.patch<Map<String, dynamic>>(
      '/api/orders/$orderId/comments/$commentId',
      data: {'is_completed': isCompleted},
    );
    
    final commentModel = comment_models.OrderCommentModel.fromJson(
      response.data!['comment'] as Map<String, dynamic>,
    );
    
    print('üåê ApiClient: –°—Ç–∞—Ç—É—Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω');
    return commentModel;
  }

  /// –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  Future<void> deleteOrderComment(int orderId, int commentId) async {
    print('üåê ApiClient: –£–¥–∞–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π $commentId');
    
    await _dio.delete('/api/orders/$orderId/comments/$commentId');
    
    print('üåê ApiClient: –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —É–¥–∞–ª–µ–Ω');
  }
}
