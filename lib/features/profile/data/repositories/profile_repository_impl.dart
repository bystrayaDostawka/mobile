import '../../../../core/network/api_client.dart';
import '../../../../core/usecase/usecase.dart';
import '../../../../core/error/failures.dart';
import '../../domain/repositories/profile_repository.dart';
import '../../data/model/profile_response_model.dart';
import '../../data/model/update_profile_request_model.dart';

/// –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –ø—Ä–æ—Ñ–∏–ª—è
class ProfileRepositoryImpl implements ProfileRepository {
  ProfileRepositoryImpl({required this.apiClient});

  final ApiClient apiClient;

  @override
  Future<Result<ProfileResponseModel>> getProfile() async {
    try {
      print('üåê ProfileRepository: –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      final profileData = await apiClient.getUserProfile();
      return Result.success(profileData);
    } catch (e) {
      print('‚ùå ProfileRepository: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: $e');
      return Result.failure(ServerFailure('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: $e'));
    }
  }

  @override
  Future<Result<ProfileResponseModel>> updateProfile(
    UpdateProfileRequestModel request,
  ) async {
    try {
      print('üåê ProfileRepository: –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      final updatedProfile = await apiClient.updateUserProfile(request);
      return Result.success(updatedProfile);
    } catch (e) {
      print('‚ùå ProfileRepository: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: $e');
      return Result.failure(ServerFailure('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: $e'));
    }
  }
}
